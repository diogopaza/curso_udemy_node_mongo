curso node - - - udemy

requisi��es http::

npm install express -save(salva dentro do projeto o 
nmp j� baixa as dependencias o  module vai junto com
o projeto)

EJS ===

npm install ejs --save

app.set('view engine','ejs')
caso queira mudar caminho das app.set('views', './app/views')

permitir escrever paginas html com javascript
engine de paginas 

informa para o expresse que o engine de view � o ejs
--------------------------

commonJS
module.exports = variavel
ou fun��o anonima
module.exports = function(){}

define as constru��es de m�dulos
permite incorporar modulos as node

----------------------------------
banco de dados mysql

npm install mysql --save

acessa a pasta bin
mysql -u user -p para ele pedir senha

show databases
create database nome;
use nome_tabela;
show tables;
select * from noticias;
insert into table(campo1,campo2) values('valores','valores');

------------------------------------------------
consign
modulo que permite incluir automaticamente
diversos modulos da aplica��o
faz um scan e atribui todas as rotas automaticamente

npm install consign --save


consign().include('routes').into(app)
faz um scan e joga tudo no servidor
----------------------------------------------------

models
s�o entidades do banco de dados
cada models representa uma tabela do banco de dados

-----------------------------------------------------

classes javascript

descreve estados e comportmentos de um objeto

toda variavel que começa com _ quer dizer que é uma propriedade da classe
--------------------------------------------------

express validator
validações de dados

npm install express-validator --save
ele é um middleware precisa incluir na inicialização


---------------------------------------

alterar tabela
alter table noticias add column resumo varchar(100);

-------------------------------------
permiti acessar arquivos estaticos

app.use(express.static('./app/public'))


-----------------------------------------------------

PROJETO MULTI-ROOM CHAT

1-criar diretorio
2-iniciar npm - npm init
3-express - npm install express --save
4-ejs - npm install ejs --save
5-consign - autoloader npm install consign --save
6- bodyparser - contem elementos de formulario - npm install body-parser --save
7- express validator - npm install express-validator --save

---------------------------------------------------
socket=

websocket== comunicação bidirecional na web, conexao persistente, foje dos paradigmas req e res tradicional web
póprio servidor envia mensagens ao cliente, sem a necessidade do cliente clicar em nada

socket.io== instalar socket.io == npm install socket.io --save



----------------------------
MONGO DB

NOSQL - AUSENCIA DA LINGUAGEM NOSQL

INSTALAR MONGODB

mongod.exe sobe o servidor
ele pede pasta data/db para salvar os dados

Manipular dados no cliente do mongodb

sistemas gerenciadores de banco de dados
Dentro temos varios banco de dados

show dbs = exibe databases

use = tambem cria banco de dados, prepara

use_nome

db.dropDatabase() = elimina banco de dados

COLLECTIONS
são as tabelas do sql

db.createCollection('nome')

db.getCollectionName()
retorna as collections do meu banco

REMOVER collection
db.nomeCollection.drop()

documento em mongo sao JSON

db.nomeCollection.save( { passa o json ex: nome:'diogo',idade:'35'})

db.nomeCollection.find()   mostra o json dentro da collection








